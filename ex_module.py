# --------------------------------------------------------------------------------------
# 모듈(Module) 및 패키지(Package) 살펴보기
# [조건] 동일한 목표/목적으로 구성됨
# --------------------------------------------------------------------------------------
# - 모듈 : 변수, 함수, 클래스를 하나의 파일로 묶은 것
# - 패키지 : 모듈들을 하나로 묶은 것 (<= 라이브러리)
# ( 모듈 <= 패키지 <= 라이브러리 )
# --------------------------------------------------------------------------------------

# [사용법]-------------------------------------------------------------------------------
# 모듈안의 모든 것 포함
# import 모듈명           => 모듈명.변수명 or 모듈명.함수 or 모듈명.클래스로 사용해야됨
# import 모듈명 as 별칭    => 별칭.변수명 or 별칭.함수 or 별칭.클래스로 사용해야됨
# ---------------------------------------------------------------------------------------
# 모듈안에서 선택한 것만 포함
# from 모듈명 import 변수, 함수, 클래스 => 변수명, 함수, 클래스
# ---------------------------------------------------------------------------------------

# 파이썬 기본 제공 모듈, 표준모듈
import math as m     # 모듈 전체 포함
from math import pow # 모듈에서 선택한 것만 포함
from math import *   # * (아스타리크) 의미 : 모든 것  => from 으로 들고오면 모듈명 안적어도 됨

# 포함한 모듈 사용하기 -------------------------------------------------------------------
print(m.pi)              # 모듈명.변수명
print(m.factorial(5))    # 모듈명.함수명()
print(pow(2,3))          # 함수명()
print(factorial(4))

# 임의의 수 생성 관련 모듈 사용 -----------------------------------------------------------
import random as r

# 임의의 숫자를 1개 출력
# random() 0.0 < x <= 1.0 사이의 임의의 실수 반환
for _ in range(10):
    print(round(r.random()*10,2),end=' ')
print()

# 범위지정 임의의 정수 숫자 출력
# randint(sNum,eNum) : sNum <= x <= eNum 사이의 임의의 정수 반환
for _ in range(10):
    print(r.randint(1,5),end=' ')
print()

# 지정된 범위에서 임의의 숫자 범위 생성
# randrange(start,end,step)
print(r.randrange(1,50,2))


# =========================================================================================
# MyLotto
# 숫자 1~45, 중복x, 6개 숫자
# List 사용 --------------------------------------------------------------------------------
L=[]
while True:
    R=r.randint(1,45)
    if R not in L: L.append(R)
    if len(L)==6: break
print(L)
# Set 사용 ---------------------------------------------------------------------------------
L=set()
while True:
    R=r.randint(1,45)
    L.add(R)
    if len(L)==6: break
print(L)
# ===========================================================================================


# 파일 입출력 open() 함수랑 함께 사용 =========================================================
import os.path
FILE_NAME='Good.txt'
if not os.path.exists(FILE_NAME):
    print(f'\"{FILE_NAME}"가 존재하지 않음.')
else:
    fp=open(FILE_NAME,mode='r',encoding='utf-8')
    print(fp.read())
    fp.close()
